name: Rust basic workflow

on:
  push:
    branches: [ "main", "ci-integration-test", "ci-cd" ]
  pull_request:
    branches: [ "main", "ci-integration-test", "ci-cd"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_cache:
    name: Build and unit test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    # - name: Run unit tests
    #   run: cargo test --bins --verbose
    - name: Cache cargo package cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-package-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo builds
      uses: actions/cache@v3
      with:
        path: ./target
        key: ${{ runner.os }}-cargo-build-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Upload built binary
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: xum-test-server # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: /home/runner/work/axum-test-server/axum-test-server/target/debug/xum-test-server
        # The desired behavior if no files are found using the provided path.
        # Available Options:
        #    warn: Output a warning but do not fail the action
        #    error: Fail the action with an error message
        #    ignore: Do not output any warnings or errors, the action does not fail
        if-no-files-found: warn # optional, default is warn
        # Duration after which artifact will expire in days. 0 means using default retention.
        # Minimum 1 day. Maximum 90 days unless changed from the repository settings page.
        retention-days: 1 # optional
  lint:
    if: github.event_name == 'pull_request'
    name: Lint Action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run linters
        run: cargo clippy --verbose --no-deps
  integration_test:
    needs: build_and_cache
    runs-on: ubuntu-latest
    name: Integration testing
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Restore cargo package cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-package-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: Restore cargo build cache
      uses: actions/cache@v3
      with:
        path: ./target
        key: ${{ runner.os }}-cargo-build-cache-${{ hashFiles('**/Cargo.lock') }}
    - name: E2E test endpoints
      run: |
        cargo run &
          sleep 5 && 
          cargo test --verbose -- --nocapture
